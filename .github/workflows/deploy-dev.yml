name: Deploy to Dev

on:
  workflow_dispatch:
  push:
    branches:
      - JangHyun0247-patch-1
  pull_request:
    branches:
      - dev
    types:
      - closed

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      # 리포지토리를 체크아웃하여 코드베이스를 가져옴
      - name: Checkout
        uses: actions/checkout@v3

      # JDK 17을 설정하여 자바 환경을 구성
      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          java-version: '17'
          distribution: 'adopt'

      # Gradle 실행 파일에 실행 권한 부여
      - name: Grant execute permission for gradlew
        run: chmod +x ./gradlew

      # 유닛 테스트를 실행하여 코드의 품질을 확인
      - name: Run unit tests
        run: ./gradlew clean test

      # 테스트가 통과된 경우 Jar 파일을 빌드
      - name: Build Jar
        run: ./gradlew bootJar

      # Docker 이미지를 빌드하여 애플리케이션 컨테이너 이미지 생성
      - name: Build Docker image
        run: docker build -t itsmine .

      # Amazon ECR에 로그인하여 Docker 이미지를 푸시할 수 있도록 설정
      - name: Log in to Amazon ECR
        run: |
          aws ecr get-login-password --region ${{ secrets.AWS_REGION }} | docker login --username AWS --password-stdin ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com

      # 빌드된 Docker 이미지에 태그를 설정하여 ECR에 푸시할 수 있도록 준비
      - name: Tag Docker image
        run: docker tag itsmine:latest ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/itsmine:latest

      # Docker 이미지를 Amazon ECR에 푸시
      - name: Push Docker image to ECR
        run: docker push ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/itsmine:latest

      # EC2 인스턴스에 SSH로 접속하여 Docker 컨테이너를 배포
      - name: SSH into EC2 and deploy Docker container
        uses: appleboy/ssh-action@v0.1.6
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ec2-user
          key: ${{ secrets.SSH_KEY }}
          port: 22
          script_stop: true
          script: |
            docker pull ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/itsmine:latest
            docker stop itsmine || true
            docker rm itsmine || true
            docker run -d --name itsmine -p 8080:8080 ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/itsmine:latest
