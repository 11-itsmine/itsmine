server:
  port: ${SERVER-PORT:8080}

spring:
  rabbitmq:
    host: b-74842f32-f57f-4c31-89d4-1f6d3c4703fc.mq.ap-northeast-2.amazonaws.com
    port: ${RABBITMQ_PORT} # RabbitMQ SSL port
    username: ${RABBITMQ_USERNAME}
    password: ${RABBITMQ_PASSWORD}
    virtual-host: ${RABBITMQ_VIRTUAL_HOST}
    ssl:
      enabled: true
  data:
    redis:
      host: localhost
      port: 6379

  activemq:
    broker-url: ${ACTIVEMQ-BROKER}
    user: ${ACTIVEMQ-USER}
    password: ${ACTIVEMQ-PASSWORD}
    queue:
      name: sample-queue

  
  # 배포 환경이라는 것은 각각 다양한 환경이 존재한다. 이때 각각의 주소가 다르다.
  # 이런것을 다 실행할때 각각을 하드코딩하면 제대로 사용할 수 없다. 이렇게 되면 따로 브랜치를 생성하는 식으로 관리를 해야한다.
  # 이렇게 변경되는 것들에 대해서 따로 빼서 관리하는 것 입니다.
  datasource:
    url: jdbc:mariadb://${DB-URL}/itsmine
    username: ${DB-USER}
    password: ${DB-PASSWORD}
    driver-class-name: org.mariadb.jdbc.Driver

#  mongodb:
#    url: mongodb://localhost:27017/itsmine

    #  rabbitmq:
    #    host: ${RABBIT-MQ-HOST}
    #    port: ${RABBIT-MQ-PORT}
    #    username: ${RABBIT-MQ-USER}
    #    password: ${RABBIT-MQ-PWD}
    #    virtual-host: ${RABBIT-MQ-VH}
    #port: 61613



  sql:
    init:
      encoding: UTF-8

  jpa:
    hibernate:
      ddl-auto: update

    properties:
      hibernate:
        show_sql: true
        format_sql: true
        connection:
          CharSet: utf-8
          characterEncoding: utf-8
          useUnicode: true
  web:
    resources:
      static-locations: classpath:/static/
  thymeleaf:
    suffix: .html
    prefix: classpath:templates/

  profiles:
    include:
      - aws
  main:
    allow-bean-definition-overriding: true

jwt-secret-key: ${JWT-KEY}

admin-token: ${ADMIN-TOKEN}

activemq:
  queue.name: ${ACTIVEMQ-QNAME}


